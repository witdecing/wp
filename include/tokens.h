#ifndef TOKENS_H
#define TOKENS_H


char * TOKENS_CHARACTERS[] = {
	"+", "-", "*", "/",

	"=", "+=", "-=", "*=", "/=",

	">", "<", "!", "==", ">=", "<=", "!=",

	".", ",",

	"(", ")", "[", "]", "{", "}"
};


enum TOKENS_CHARACTERS_NAME {
	ADD, SUB, MUL, DIV,

	EQ, ADDEQ, SUBEQ, MULEQ, DIVEQ,

	GTHAN, LTHAN, NOT, EQEQ, GTHANEQ, LTHANEQ, NOTEQ,

	DOT, COMMA,

	LPAREN, RPAREN, LBRACK, RBRACK, LCURL, RCURL,

	CHAR, INT, FLOAT, STRING, ID,

	IDCHAR, IDINT, IDFLOAT, IDSTRING, FUNC,

	KEYIF, KEYELIF, KEYELSE,
	KEYFOR, KEYWHILE,

	NEWLINE, _EOF,

	COMPOUND,
	VAR_NAME,
	CHAR_VAR_DEF, INT_VAR_DEF, FLOAT_VAR_DEF, STRING_VAR_DEF,
	CHAR_FUNC_DEF, INT_FUNC_DEF, FLOAT_FUNC_DEF, STRING_FUNC_DEF
};


enum TOKENS {
	DATA_TYPE_CHAR,
	DATA_TYPE_SIGNED_CHAR,
	DATA_TYPE_UNSIGNED_CHAR,
	DATA_TYPE_SHORT,
	DATA_TYPE_SIGNED_SHORT,
	DATA_TYPE_UNSIGNED_SHORT,
	DATA_TYPE_INT,
	DATA_TYPE_SIGNED_INT,
	DATA_TYPE_UNSIGNED_INT,
	DATA_TYPE_LONG,
	DATA_TYPE_SIGNED_LONG,
	DATA_TYPE_UNSIGNED_LONG,
	DATA_TYPE_LONG_LONG,
	DATA_TYPE_SIGNED_LONG_LONG,
	DATA_TYPE_UNSIGNED_LONG_LONG,
	DATA_TYPE_FLOAT,
	DATA_TYPE_DOUBLE,
	DATA_TYPE_LONG_DOUBLE,
	DATA_TYPE_VOID,
	DATA_TYPE_STRING,
	DATA_TYPE_UNI,
	DATA_TYPE_FUNCTION,
	DATA_TYPE_CLASS,
	DATA_TYPE_STRUCT,
	DATA_TYPE_ENUM,
	DATA_TYPE_LIST,
	DATA_TYPE_DICT,
	DATA_TYPE_ID,

	CHAR_VARIABLE_DEFINITION,
	SIGNED_CHAR_VARIABLE_DEFINITION,
	UNSIGNED_CHAR_VARIABLE_DEFINITION,
	SHORT_VARIABLE_DEFINITION,
	SIGNED_SHORT_VARIABLE_DEFINITION,
	UNSIGNED_SHORT_VARIABLE_DEFINITION,
	INT_VARIABLE_DEFINITION,
	SIGNED_INT_VARIABLE_DEFINITION,
	UNSIGNED_INT_VARIABLE_DEFINITION,
	LONG_VARIABLE_DEFINITION,
	SIGNED_LONG_VARIABLE_DEFINITION,
	UNSIGNED_LONG_VARIABLE_DEFINITION,
	LONG_LONG_VARIABLE_DEFINITION,
	SIGNED_LONG_LONG_VARIABLE_DEFINITION,
	UNSIGNED_LONG_LONG_VARIABLE_DEFINITION,
	FLOAT_VARIABLE_DEFINITION,
	DOUBLE_VARIABLE_DEFINITION,
	LONG_DOUBLE_VARIABLE_DEFINITION,
	VOID_VARIABLE_DEFINITION,
	STRING_VARIABLE_DEFINITION,
	UNI_VARIABLE_DEFINITION,

	CHAR_FUNCTION_DEFINITION,
	SIGNED_CHAR_FUNCTION_DEFINITION,
	UNSIGNED_CHAR_FUNCTION_DEFINITION,
	SHORT_FUNCTION_DEFINITION,
	SIGNED_SHORT_FUNCTION_DEFINITION,
	UNSIGNED_SHORT_FUNCTION_DEFINITION,
	INT_FUNCTION_DEFINITION,
	SIGNED_INT_FUNCTION_DEFINITION,
	UNSIGNED_INT_FUNCTION_DEFINITION,
	LONG_FUNCTION_DEFINITION,
	SIGNED_LONG_FUNCTION_DEFINITION,
	UNSIGNED_LONG_FUNCTION_DEFINITION,
	LONG_LONG_FUNCTION_DEFINITION,
	SIGNED_LONG_LONG_FUNCTION_DEFINITION,
	UNSIGNED_LONG_LONG_FUNCTION_DEFINITION,
	FLOAT_FUNCTION_DEFINITION,
	DOUBLE_FUNCTION_DEFINITION,
	LONG_DOUBLE_FUNCTION_DEFINITION,
	VOID_FUNCTION_DEFINITION,
	STRING_FUNCTION_DEFINITION,
	UNI_FUNCTION_DEFINITION,

	CLASS_DEFINITION,
	STRUCT_DEFINITION,
	ENUM_DEFINITION,
	LIST_DEFINITION,
	DICT_DEFINITION,

	VALUE_CHAR,
	VALUE_INT,
	VALUE_FLOAT,
	VALUE_STRING,
	VALUE_NULL,

	KEYWORD_IF,
	KEYWORD_ELIF,
	KEYWORD_ELSE,
	KEYWORD_AND,
	KEYWORD_OR,
	KEYWORD_NOT,
	KEYWORD_FOR,
	KEYWORD_WHILE,
	KEYWORD_REPEAT,
	KEYWORD_DO,
	KEYWORD_BREAK,
	KEYWORD_CONTINUE,
	KEYWORD_SWITCH,
	KEYWORD_CASE,
	KEYWORD_DEFAULT,
	KEYWORD_CONST,
	KEYWORD_RETURN,
	KEYWORD_IMPORT,
	KEYWORD_RELATIVE,
	KEYWORD_LOCAL,
	KEYWORD_WEB,
	KEYWORD_CACHE,

	CONSTANT_LPAREN,
	CONSTANT_RPAREN,
	CONSTANT_LBRACK,
	CONSTANT_RBRACK,
	CONSTANT_LCURL,
	CONSTANT_RCURL,
	CONSTANT_DOT,
	CONSTANT_COMMA,
	CONSTANT_COLON,

	OPERATION_ADD,
	OPERATION_SUB,
	OPERATION_MUL,
	OPERATION_DIV,
	OPERATION_MOD,
	OPERATION_LTHAN,
	OPERATION_GTHAN,
	OPERATION_EQ,
	OPERATION_NOT,
	OPERATION_OR,
	OPERATION_ADDEQ,
	OPERATION_SUBEQ,
	OPERATION_MULEQ,
	OPERATION_DIVEQ,
	OPERATION_MODEQ,
	OPERATION_LTHANEQ,
	OPERATION_GTHANEQ,
	OPERATION_EQEQ,
	OPERATION_NOTEQ,
	OPERATION_OREQ,

	WHITESPACE_SPACE,
	WHITESPACE_TAB,
	WHITESPACE_NEWLINE,

	SPECIAL_EOF
};


#endif
